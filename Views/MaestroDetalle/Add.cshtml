@model MaestroDetalle.Models.ViewModels.VentaViewModel

@{
    ViewBag.Title = "Maestro Detalle";
}

<h2>@ViewBag.Title</h2>

<div style="color: forestgreen">
    @ViewBag.Mensaje
</div>

<!--usamos el helper para el formulario-->
<!--le indicamos 3 parametris: "Metodo", "Controlador", FormMethod.Post-->
@using (Html.BeginForm("Add", "MaestroDetalle", FormMethod.Post))
{
    <div class="row">
        <h3>Maestro:</h3>
        <div class="form-group">
            @Html.LabelFor(v => v.Cliente)
            @Html.TextBoxFor(v => v.Cliente, new { @class = "form-control" })
        </div>
        <hr />
     </div>

    <div class="row">

        <!--input que agregan los valores a los campos-->
        <div class="form-group">
            <label for="Cantidad">Cantidad</label>
            <input type="number" class="form-control" id="Cantidad" placeholder="Ingres una Cantidad">
        </div>
        <div class="form-group">
            <label for="Nombre">Nombre</label>
            <input type="text" class="form-control" id="Nombre" placeholder="Ingres un Nombre">
        </div>
        <div class="form-group">
            <label for="Precio">Precio</label>
            <input type="number" class="form-control" id="Precio" placeholder="Ingres un Precio">
        </div>
        <!--return false, para que no realice el submit-->
        <!--solo inicia el llenado de la lista Conceptos-->
        <input type="button" value="Agregar" class="btn btn-success" onclick="AgregaConcepto(); return false" />

        <h3>Detalle:</h3>
    <!--el datalle va a llenar una tabla de forma automatica,
    usaremos javaScript para que se llene automaticamente.
    -->
        <div id="divConceptos">
            <table class="table" id="tablaConceptos" style="width:75%">
                <tr>
                    <th>Cantidad</th>
                    <th>Nombre</th>
                    <th>Precio Unitario</th>
                    <th>Total</th>
                </tr> 
            </table>
          <!--los tr y td con los datos los insertamos con el script de js-->

        </div>

        <!--en via los datos del formulario al controlador-->
        <div class="form-group">
            <input type="submit" value="Gurdar Registros" class="btn btn-primary" />
        </div>
    </div>


    <!--Funcion JS que agrega conceptos a la tabla cuando se haga clic en el boton Agregar-->
    <script>
        //variable globla para indicar el indiece los input hidden
        var num = 0;
        function AgregaConcepto() {
            //**************************** LLENAR LA TABLA ***************************
            //input principales:
            //obtener los valores de los input:
            let Cantidad = document.getElementById("Cantidad").value;
            let Nombre = document.getElementById("Nombre").value;
            let Precio = document.getElementById("Precio").value;

            //Obtener la tabla tablaConceptos
            //let Tabla = document.getElementById("tablaConceptos");
            //[0] obtenemos el primer tbody
            let Tbody = document.getElementsByTagName("tbody")[0];

            //Crear en memoria los tr de la tabla
            let TR = document.createElement("tr");

            //Crear en memoria los td de la tabla
            let TDCantidad = document.createElement("td");
            let TDNombre = document.createElement("td");
            let TDPrecio = document.createElement("td");
            let TDTotal = document.createElement("td");

            //Agregar los valores a los td, usamos las let de los valores de los input
            TDCantidad.innerHTML = Cantidad;
            TDNombre.innerHTML = Nombre;
            TDPrecio.innerHTML = Precio;
            //Total lo vamos a calcular en el back end para evitar errores, lo usaremos aqui de forma ilustrativa
            TDTotal.innerHTML = parseFloat(Cantidad) * parseFloat(Precio);

            //Agregar al tr los td 
            TR.appendChild(TDCantidad);
            TR.appendChild(TDNombre);
            TR.appendChild(TDPrecio);
            TR.appendChild(TDTotal);

            //Agregar al tbody de la tabla los TR ya contiene a los td
            Tbody.appendChild(TR);

            //Agregar a la Tabla los TR ya contiene a los td
           // Tabla.appendChild(Tbody);



           //*************************** ENVIAR LOS DATOS AL CONTROLADOR  **************************
           //el div que contiene a la tabla
            let DivConceptos = document.getElementById("divConceptos");

            //Creamos los inputs y los cargamos en una varible, estos input son para que se haga mach con el modelo
            //para enviaran los datos al controlador que de momento solo estan cargados en la tabla
            //los ocultamos hidden para que nos e vean en la vista 
            let HiddenIndex = document.createElement("input"); // HiddenIndex sirve para que MVC sepa que numero de indice se esta utilizado
            let HiddenCantidad = document.createElement("input");
            let HiddenNombre = document.createElement("input");
            let HiddenPrecio = document.createElement("input");

            //Agregamos las propiedades al input  HiddenIndex:
            //Conceptos debe ser exactemente el nombre que tiene el campo en el modelo:  VentaViewModel Conceptos { get; set; }
            //HiddenIndex sirve para que el controlador sepa que numero de indice se esta utilizado
            //ya que Conceptos es una lista que se va a ir llenando
            //INICIA A LLENAR LA LISTA EN LA POSICION 0:
            HiddenIndex.name = "Conceptos.Index"
            HiddenIndex.value = num; //num inicia en 0 es la varaible global
            HiddenIndex.type = "hidden";

            //Agregamos las propiedades del input principal Cantidad al input HiddenCantidad:
            //Inicia En la posicion Conceptos[0].Cantidad
            HiddenCantidad.name = "Conceptos[" + num + "].Cantidad";
            HiddenCantidad.value = Cantidad; //son los valores de los input que estamos obteniendo en las variables del principio 
            HiddenCantidad.type = "hidden";

            //agregamos las propiedades del input principal Nombre al input HiddenNombre
            HiddenNombre.name = "Conceptos[" + num + "].Nombre";
            HiddenNombre.value = Nombre;  
            HiddenNombre.type = "hidden";

            //agregamos las propiedades de input principal Precio al input HiddenPrecio 
            HiddenPrecio.name = "Conceptos[" + num + "].PrecioUnitario";  //los nombres deben ser como estan en el modelo:  VentaViewModel
            HiddenPrecio.value = Precio;
            HiddenPrecio.type = "hidden";


            //agregamos al DivConceptos los input Hidden
            //aunque no se mostraran ya que la tabla los estara mostrando, si no se verian dos veces
            //los input Hidden nos sirven unicamente para enviar los datos al controlador y llenar la lista Conceptos
            DivConceptos.appendChild(HiddenIndex);
            DivConceptos.appendChild(HiddenCantidad);
            DivConceptos.appendChild(HiddenNombre);
            DivConceptos.appendChild(HiddenPrecio);



            //Borrar los valores de los input
            document.getElementById("Cantidad").value = "";
            document.getElementById("Nombre").value = "";
            document.getElementById("Precio").value = "";


            //aumentar la variable global, usada comno indice para llenar la lista
            num++;
        }
    </script>
}